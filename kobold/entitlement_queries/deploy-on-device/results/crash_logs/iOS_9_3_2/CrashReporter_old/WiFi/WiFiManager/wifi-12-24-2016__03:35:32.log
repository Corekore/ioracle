12/24/2016  3:30:50.009 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:31:01.439 WoW is Disabled, 0 WoW Clients
12/24/2016  3:31:06.164 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:31:06.378 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:31:11.462 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:31:13.801 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:31:34.667 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:31:42.495 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:32:04.299 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Blacklisted_Channels"] = <CFArray 0x14cd6dc50 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cde1050 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf62f30 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cf9fd80 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf62f30 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cf26970 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf62f30 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:08.200 WiFiLocaleManagerCheckLocale: trying to determine locale...
12/24/2016  3:32:08.200 WiFiManagerCoreLocationGetCachedLocation: getting cached location...
12/24/2016  3:32:08.222 __WiFiLocaleManagerGetLocaleFromMcc: finding iso country code for mcc 226 ....
12/24/2016  3:32:08.222 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 120.000000 location age 120.019139secs, lifeSpan -1.000000 accuracy 4001.223502(highAccReq 0), isValid 1
12/24/2016  3:32:08.222 WiFiLocationServiceManagerStartLowAccuracyMonitoring: Cached low accuracy location is valid
12/24/2016  3:32:08.222 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 120.000000 location age 120.019280secs, lifeSpan -1.000000 accuracy 4001.223502(highAccReq 1), isValid 0
12/24/2016  3:32:08.222 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 120.000000 location age 120.019337secs, lifeSpan -1.000000 accuracy 4001.223502(highAccReq 0), isValid 1
12/24/2016  3:32:08.222 __WiFiLocationServiceManagerProcessLocationAvailableEvent: isValidHighAccuracyLocation 0,  isValidLowAccuracyLocation 1
12/24/2016  3:32:08.222 __WiFiLocationServiceManagerProcessLocationAvailableEvent: give low accuracy callback
12/24/2016  3:32:08.223 __WiFiLocaleManagerGetLocaleFromLocation: <+45.79545128,+23.91817032> +/- 4001.22m (speed -1.00 mps / course -1.00) @ 12/24/16, 3:30:08 AM Eastern European Standard Time
12/24/2016  3:32:08.223 locale from bounding box 
12/24/2016  3:32:08.223 new locale:  , locale: 
12/24/2016  3:32:08.223 Stopping Low Accuracy Location Monitoring
12/24/2016  3:32:08.223 CLMonitoring is already stopped
12/24/2016  3:32:08.223 Stopping Low Accuracy Location Monitoring
12/24/2016  3:32:08.223 CLMonitoring is already stopped
12/24/2016  3:32:08.224 __WiFiLocationServiceManagerEventCallback, got cb dict {
    eventType = 0;
    location = "<+45.73969707,+23.99889463> +/- 10002.88m (speed -1.00 mps / course -1.00) @ 12/24/16, 3:32:08 AM Eastern European Standard Time";
}
12/24/2016  3:32:08.224 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 120.000000 location age 0.021420secs, lifeSpan -1.000000 accuracy 10002.877195(highAccReq 1), isValid 0
12/24/2016  3:32:08.224 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 120.000000 location age 0.021476secs, lifeSpan -1.000000 accuracy 10002.877195(highAccReq 0), isValid 0
12/24/2016  3:32:08.224 __WiFiLocationServiceManagerProcessLocationAvailableEvent: isValidHighAccuracyLocation 0,  isValidLowAccuracyLocation 0
12/24/2016  3:32:11.471 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:32:26.390 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cdade00 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cd7e6d0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:26.391 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Blacklisted_Channels"] = <CFArray 0x14cfa9080 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cd60600 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf07930 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:26.392 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:32:52.435 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Blacklisted_Channels"] = <CFArray 0x14cf259c0 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cde7300 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cde1050 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cd31a00 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:52.435 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf07930 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cf26970 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf07c20 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cd7e6d0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf07c20 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cda31f0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf07c20 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:52.436 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:32:52.493 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf07930 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cd60600 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cdade00 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:52.493 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Blacklisted_Channels"] = <CFArray 0x14cdade00 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cfcda80 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cdd3cd0 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:52.494 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:32:53.697 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Blacklisted_Channels"] = <CFArray 0x14cf259c0 [0x1a0950150]>{type = mutable-small, count = 12, values = (
	0 : <CFBasicHash 0x14cd60600 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000013 [0x1a0950150]>{value = +1, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cde1050 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000023 [0x1a0950150]>{value = +2, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cd7e6d0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000033 [0x1a0950150]>{value = +3, type = kCFNumberSInt64Type}
}

	3 : <CFBasicHash 0x14cf139b0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000043 [0x1a0950150]>{value = +4, type = kCFNumberSInt64Type}
}

	4 : <CFBasicHash 0x14cf26970 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000053 [0x1a0950150]>{value = +5, type = kCFNumberSInt64Type}
}

	5 : <CFBasicHash 0x14cda31f0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000063 [0x1a0950150]>{value = +6, type = kCFNumberSInt64Type}
}

	6 : <CFBasicHash 0x14cf62c00 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000073 [0x1a0950150]>{value = +7, type = kCFNumberSInt64Type}
}

	7 : <CFBasicHash 0x14cf9fd80 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000083 [0x1a0950150]>{value = +8, type = kCFNumberSInt64Type}
}

	8 : <CFBasicHash 0x14cd5f040 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000093 [0x1a0950150]>{value = +9, type = kCFNumberSInt64Type}
}

	9 : <CFBasicHash 0x14cf3e590 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000a3 [0x1a0950150]>{value = +10, type = kCFNumberSInt64Type}
}

	10 : <CFBasicHash 0x14cf6e9f0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	11 : <CFBasicHash 0x14cda7980 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfa9080 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:32:53.732 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:33:00.299 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:33:01.342 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cdade00 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cde7300 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cfa0530 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cd31a00 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:01.343 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:33:01.400 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf07c20 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cf54f30 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cdade00 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:01.401 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:33:03.731 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:33:08.973 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:33:10.299 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf143e0 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cde7300 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cd84570 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cf36790 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:10.300 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:33:10.359 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cdade00 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cd31a00 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf143e0 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:10.360 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:33:32.372 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:33:39.101 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:33:39.797 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cd0dad0 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cde7300 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cf54f30 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cf62fb0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:39.798 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:33:39.856 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf25180 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cfc6630 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cd0dad0 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:39.856 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:33:42.823 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:33:47.901 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:33:48.694 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf25180 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cde7300 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cfcda80 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cf54f30 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:48.695 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:33:48.731 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cd84640 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cf137f0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf25180 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:33:48.731 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:33:56.452 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:34:08.200 WiFiLocaleManagerCheckLocale: trying to determine locale...
12/24/2016  3:34:08.200 WiFiManagerCoreLocationGetCachedLocation: getting cached location...
12/24/2016  3:34:08.222 __WiFiLocaleManagerGetLocaleFromMcc: finding iso country code for mcc 226 ....
12/24/2016  3:34:08.222 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 120.000000 location age 120.019627secs, lifeSpan -1.000000 accuracy 10002.877195(highAccReq 0), isValid 0
12/24/2016  3:34:08.223 Starting Low Accuracy Location Monitoring, locationMonitoringTimeout=60.000000
12/24/2016  3:34:08.223 WiFiManagerCoreLocationStartLocationUpdates: starting location updates...
12/24/2016  3:34:08.223 Location Monitoring successfully started with accuracy=3000.000000meters
12/24/2016  3:34:08.223 __WiFiLocationServiceManagerEventCallback, got cb dict {
    eventType = 0;
    location = "<+45.74380618,+24.01094695> +/- 10043.47m (speed -1.00 mps / course -1.00) @ 12/24/16, 3:34:08 AM Eastern European Standard Time";
}
12/24/2016  3:34:08.224 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 0.000000 location age 0.020865secs, lifeSpan -1.000000 accuracy 10043.471178(highAccReq 1), isValid 0
12/24/2016  3:34:08.224 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 0.000000 location age 0.020922secs, lifeSpan -1.000000 accuracy 10043.471178(highAccReq 0), isValid 0
12/24/2016  3:34:08.224 __WiFiLocationServiceManagerProcessLocationAvailableEvent: isValidHighAccuracyLocation 0,  isValidLowAccuracyLocation 0
12/24/2016  3:34:08.244 CLLocationManager didUpdateLocations !!
12/24/2016  3:34:08.244 __WiFiLocationServiceManagerEventCallback, got cb dict {
    eventType = 0;
    location = "<+45.74380618,+24.01094695> +/- 10043.47m (speed -1.00 mps / course -1.00) @ 12/24/16, 3:34:08 AM Eastern European Standard Time";
}
12/24/2016  3:34:08.245 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 0.000000 location age 0.003695secs, lifeSpan -1.000000 accuracy 10043.471178(highAccReq 1), isValid 0
12/24/2016  3:34:08.245 WiFiLocationServiceManagerIsLocationValid: cachedLocationTimeout 0.000000 location age 0.003759secs, lifeSpan -1.000000 accuracy 10043.471178(highAccReq 0), isValid 0
12/24/2016  3:34:08.246 __WiFiLocationServiceManagerProcessLocationAvailableEvent: isValidHighAccuracyLocation 0,  isValidLowAccuracyLocation 0
12/24/2016  3:34:08.250 Async scan requested by "locationd" for 1 iterations with maxage=0 priority normal on en0
12/24/2016  3:34:08.250 Enqueuing command type: "Scan" pending commands: 0
12/24/2016  3:34:08.250 Dequeuing command type: "Scan" pending commands: 0
12/24/2016  3:34:08.250 Attempting Apple80211ScanAsync on en0
12/24/2016  3:34:08.252 -[WiFiManagerCoreLocationWrapper locationManager:didFailWithError:]: Error: Error Domain=kCLErrorDomain Code=0 "(null)"
12/24/2016  3:34:08.254 __WiFiLocationServiceManagerEventCallback, got cb dict {
    error = "Error Domain=kCLErrorDomain Code=0 \"(null)\"";
    eventType = 2;
}
12/24/2016  3:34:08.254 __WiFiLocationServiceManagerProcessErrorEvent: Error: Error Domain=kCLErrorDomain Code=0 "(null)"
12/24/2016  3:34:08.254 Location Monitoring stopped
12/24/2016  3:34:08.254 WiFiManagerCoreLocationStopLocationUpdates: stopping location updates...
12/24/2016  3:34:08.453 Completed Apple80211ScanAsync on en0 (0x0)
12/24/2016  3:34:08.454 Async scan request completed for "locationd" (0)
12/24/2016  3:34:08.456 Async scan requested by "locationd" for 1 iterations with maxage=0 priority normal on en0
12/24/2016  3:34:08.456 Enqueuing command type: "Scan" pending commands: 0
12/24/2016  3:34:08.456 Dequeuing command type: "Scan" pending commands: 0
12/24/2016  3:34:08.456 Attempting Apple80211ScanAsync on en0
12/24/2016  3:34:08.888 Completed Apple80211ScanAsync on en0 (0x0)
12/24/2016  3:34:08.888 Async scan request completed for "locationd" (0)
12/24/2016  3:34:09.530 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:34:10.454 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cd78040 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cf62b20 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cdf7a10 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cf80820 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cdf7a10 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cd7edc0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cdf7a10 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:34:10.455 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:34:10.492 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cdb0390 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cfcda80 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cd78040 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:34:10.493 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:34:17.473 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:34:22.571 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:34:22.894 scanCache: Purging scan cache
12/24/2016  3:34:23.256 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cd78040 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cdba640 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cd9ae20 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cf36790 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:34:23.257 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:34:23.314 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf55070 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cd8a3f0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cd78040 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:34:23.315 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:34:48.934 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:34:54.017 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:34:55.254 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cf55070 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cf62fb0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cdba640 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cd9ae20 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:34:55.255 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:34:55.291 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cfa01f0 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cfcda80 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cf55070 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:34:55.292 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:34:59.173 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cfa01f0 [0x1a0950150]>{type = mutable-small, count = 3, values = (
	0 : <CFBasicHash 0x14cd9ae20 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000b3 [0x1a0950150]>{value = +11, type = kCFNumberSInt64Type}
}

	1 : <CFBasicHash 0x14cdf7ad0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000c3 [0x1a0950150]>{value = +12, type = kCFNumberSInt64Type}
}

	2 : <CFBasicHash 0x14cf62fb0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cfb3850 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb0000000000000d3 [0x1a0950150]>{value = +13, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:34:59.174 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 2
12/24/2016  3:35:08.228 Low Accuracy Location Monitoring Timer Expired
12/24/2016  3:35:08.228 Failed to get location information; setting locale to default locale
12/24/2016  3:35:08.228 new locale:  , locale: 
12/24/2016  3:35:08.228 Stopping Low Accuracy Location Monitoring
12/24/2016  3:35:08.228 CLMonitoring is already stopped
12/24/2016  3:35:08.228 Stopping Low Accuracy Location Monitoring
12/24/2016  3:35:08.228 CLMonitoring is already stopped
12/24/2016  3:35:17.924 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_Coex_Enabled_Channels"] = <CFArray 0x14cd92b50 [0x1a0950150]>{type = mutable-small, count = 1, values = (
	0 : <CFBasicHash 0x14cf62fb0 [0x1a0950150]>{type = mutable dict, count = 1,
entries =>
	2 : <CFString 0x14cd83ee0 [0x1a0950150]>{contents = "MWS_Channel_Number"} = <CFNumber 0xb000000000000003 [0x1a0950150]>{value = +0, type = kCFNumberSInt64Type}
}

)}
12/24/2016  3:35:17.924 DeviceClient["WirelessRadioMan"] setCoexParameters["MWS_WLAN_RX_PRI_THRESHOLD"] = 0
12/24/2016  3:35:25.112 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = TRUE
12/24/2016  3:35:32.201 __WiFiManagerCellularTransmitCallback_block_invoke: Cellular Transmit Started = FALSE
12/24/2016  3:35:32.264 __WiFiDeviceProcessDumpLogsEvent: Dump logs event received, dumped wifid log buffer to file
